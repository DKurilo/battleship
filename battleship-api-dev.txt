create game 
  post username, message
  POST /api/games
  {
    "username": {username},
    "message": {message}
  }
  response new game id and session or error
  201
  {
    "game": {gameid},
    "session": {session}
  }
  400, 500
  {message}
get list of opened
  sends nothing
  GET /api/games/
  response list of {game id, messsge}
  200
  [
    {
      "game": {gameid},
      "owner": {name},
      "message": {game message}
    },
    ...
  ]
  500
  {message}
invite stranger
  post game id and session (only owner can invite strangers) and message
  POST /api/games/{gameid}/{session}/setpublic
  {
    "message": {message}
  }
  response success if added in list or error
  200
  "ok"
  404, 500
  {
    "error": {error}
  }






send map
  post session id (owner and player can send map), json with map. Only empty or ship on map
  POST /api/games/{gameid}/{session}/setmap
  [[0,0,0,1,1,0,0...],[...],[...],...]
  response ok or error (wrong map or other)
  202
  "ok"
  406, 500
  {message}
get game status
  send game id and session
  GET /api/games/{gameid}/{session}/
  response status (map contain only unknown or hit) or error
  200
  {
    "game": {gameid},
    "message": {message},
    "you": {owner|player|guest},
    "turn": {owner|player|notready},
    "owner": {
      "name": {name},
      "message": {message},
      "map": [[0,0,0,1,1,0,0...],[...],[...],...]
    },
    "player": {
      "name": {name},
      "message": {message},
      "map": [[0,0,0,1,1,0,0...],[...],[...],...]
    },
    "guests": [
      {
        "name": {name},
        "message": {message}
      }
    ]
  }
  404, 500
  {
    "error": {message}
  }
invite a bot (when bot will be ready...)
  post game id and session (only owner can invite a bot)
  POST /api/games/{gameid}/{session}/invitebot
  response success or error
  200
  "ok"
  404, 501
  {
    "error": {message}
  }
connect
  post game id, username, role (guest|player), short message
  POST /api/games/{gameid}/connect/{guest|player}
  {
    "name": {name},
    "message": {message}
  }
  response session, or error.
  202
  {
    "session": {session}
  }
  404, 403, 400, 500
  {message}
shoot
  post game id, session (only owner and player can shoot and only in ther turn) and coords
  POST /api/games/{gameid}/{session}/shoot
  {
    "x": {x},
    "y": {y},
  }
  response result (hit|miss|sink|win) or error
  202
  {hit|miss|sink|win}
  404, 403, 400, 500
  {
    "error": {message}
  }
write message
  post game id, session, message
  POST /api/games/{gameid}/{session}/chat/
  {message}
  response success or error
  201
  "ok"
  404, 403, 400, 500
  {
    "error": {message}
  }
read messages
  send game id, session, last check date(or nothing)
  GET /api/games/{gameid}/{session}/chat?lastcheck={date}
  response list of [{name, message, date}], last check date or error
  200
  [
    {
      "name": {name},
      "message": {message},
      "date": {date}
    },
    ...
  ]
  404, 500
  {
    "error": {message}
  }



Game:
{
  "game": {gameid},
  "date": {datetime},
  "message": {message},
  "owner": {
    "name": {name},
    "message": {message},
    "session": {session},
    "map": [[0,0,0,1,1,0,0...],[...],[...],...]
  },
  "player": {
    "name": {name},
    "message": {message},
    "session": {session},
    "map": [[0,0,0,1,1,0,0...],[...],[...],...]
  },
  "turn": {owner|player|notready|finished},
  "winner": {owner|player|""},
  "public": {true|false},
  "guests": [
    {
      "name": {name},
      "message": {message},
      "session": {session}
    },
    ...
  ],
  "chat: [
    {
      "name": {name},
      "message": {message},
      "date": {date}
    },
    ...
  ]
}

Initial Game structure:
{
  "game": {gameid},
  "date": {datetime},
  "owner": {
    "name": {name},
    "message": {message},
    "session": {session},
  },
  "turn": "notready",
  "public": false,
  "guests": [],
  "chat: []
}
